{"version":3,"sources":["components/ContactForm/ContactFormStyles.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListStyles.js","components/ContactList/ContactList.jsx","components/Filter/FilterStyles.js","components/Filter/Filter.jsx","components/AppStyles.js","components/App.js","index.js"],"names":["Form","styled","form","InputForm","input","Button","button","INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","shortid","generate","resetForm","onCheckUnique","alert","this","onSubmit","type","placeholder","onChange","Component","List","ul","ListItem","li","ContactListItem","onRemove","onClick","ContactList","contacts","length","map","FilterInput","Filter","filter","Container","div","MainTitle","h1","ContactTitle","h2","App","componentDidMount","userContacts","JSON","parse","localStorage","getItem","componentDidUpdate","prevProps","prevState","setItem","stringify","handleAddContact","newContact","handleCheckUnique","isExistContact","find","contact","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f851b994.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: block;\n  margin-bottom: 10px;\n`;\n\nconst InputForm = styled.input`\n  display: block;\n  margin: 10px auto;\n  padding: 12px 20px;\n  font-size: 18px;\n  border-radius: 30px;\n\n  &::placeholder {\n    padding-left: 10px;\n    font-size: 18px;\n  }\n`;\n\nconst Button = styled.button`\n  outline: none;\n  padding: 12px 20px;\n  margin: 10px 5px;\n  border-radius: 30px;\n  background-image: linear-gradient(\n    45deg,\n    #6ab1d7 0%,\n    #33d9de 50%,\n    #002878 100%\n  );\n  background-position: 100% 0;\n  background-size: 200% 200%;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 24px;\n  color: white;\n  box-shadow: 0 16px 32px 0 rgba(0, 40, 120, 0.35);\n  transition: 0.5s;\n\n  &:hover {\n    box-shadow: 0 0 0 0 rgba(0, 40, 120, 0);\n    background-position: 0 0;\n  }\n`;\n\nexport { Form, InputForm, Button };\n","import { Component } from 'react';\n\nimport shortid from 'shortid';\n\nimport { Form, InputForm, Button } from './ContactFormStyles';\n\nimport PropTypes from 'prop-types';\n\nconst INITIAL_STATE = {\n  name: '',\n  phone: '',\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidatedForm = this.validateForm();\n\n    if (!isValidatedForm) return;\n\n    onAdd({ id: shortid.generate(), name, phone });\n\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name, phone } = this.state;\n    const { onCheckUnique } = this.props;\n\n    if (!name || !phone) {\n      alert('Some field is empty!');\n      return false;\n    }\n\n    return onCheckUnique(name);\n  };\n\n  resetForm = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <Form onSubmit={this.handleFormSubmit}>\n        <InputForm\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={this.handleChangeForm}\n        />\n        <InputForm\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Enter phone number\"\n          value={phone}\n          onChange={this.handleChangeForm}\n        />\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  onCheckUnique: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst ListItem = styled.li`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n`;\n\nconst Button = styled.button`\n  margin-left: auto;\n  outline: none;\n  padding: 2px 5px;\n  border-radius: 10px;\n  background-image: linear-gradient(\n    45deg,\n    #6ab1d7 0%,\n    #33d9de 50%,\n    #002878 100%\n  );\n  background-position: 100% 0;\n  background-size: 200% 200%;\n  font-size: 16px;\n  color: white;\n  box-shadow: 0 16px 32px 0 rgba(0, 40, 120, 0.35);\n  transition: 0.5s;\n\n  &:hover {\n    box-shadow: 0 0 0 0 rgba(0, 40, 120, 0);\n    background-position: 0 0;\n  }\n`;\n\nexport { List, ListItem, Button };\n","import PropTypes from 'prop-types';\n\nimport { List, ListItem, Button } from './ContactListStyles';\n\nconst ContactListItem = ({ name, phone, onRemove }) => {\n  return (\n    <ListItem>\n      {name}: {phone} <Button onClick={onRemove}>Delete</Button>\n    </ListItem>\n  );\n};\n\nconst ContactList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <List>\n      {contacts.map(({ id, name, phone }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          phone={phone}\n          onRemove={() => onRemove(id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string,\n    }),\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst FilterInput = styled.input`\n  display: block;\n  margin: 10px auto;\n  padding: 5px;\n  font-size: 18px;\n  border-radius: 15px;\n  outline: none;\n\n  &::placeholder {\n    padding-left: 10px;\n    font-size: 16px;\n  }\n`;\n\nexport default FilterInput;\n","import PropTypes from 'prop-types';\n\nimport FilterInput from './FilterStyles';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <FilterInput\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Enter name for search\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n    ></FilterInput>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  background-color: var(--bgColorContainer);\n  width: 400px;\n  margin: 30px auto;\n  padding: 15px;\n  text-align: center;\n  border-radius: 30px;\n\n  box-shadow: var(--boxShadow);\n  transition: box-shadow 500ms var(--timingFunction);\n`;\n\nconst MainTitle = styled.h1`\n  font-size: 48px;\n  color: var(--titleColor);\n  text-align: center;\n`;\n\nconst ContactTitle = styled.h2`\n  color: var(--titleColor);\n  font-size: 24px;\n`;\n\nexport { Container, MainTitle, ContactTitle };\n","import { Component } from 'react';\n\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\n\nimport { Container, MainTitle, ContactTitle } from './AppStyles';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount = () => {\n    const userContacts = JSON.parse(localStorage.getItem('userContacts'));\n    if (userContacts) this.setState({ contacts: userContacts });\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('userContacts', JSON.stringify(contacts));\n    }\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\n\n  handleCheckUnique = name => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n\n    isExistContact && alert(`${name} is already in contact`);\n\n    return !isExistContact;\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactTitle>Form Contact</ContactTitle>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUnique}\n        />\n        <ContactTitle>Contacts List</ContactTitle>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}